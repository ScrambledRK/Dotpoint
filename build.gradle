buildscript 
{
    repositories 
	{
        mavenLocal()
		mavenCentral()
    }
    dependencies 
	{
        classpath group: 'at.dotpoint', name: 'gradle-haxe-plugin', version: '1.0-SNAPSHOT'
    }
}

// /////////////////////////////////////////////// //
// /////////////////////////////////////////////// //

allprojects
{
	apply plugin: 'haxe';

	//
	group = "at.dotpoint";
	version = "0.1-SNAPSHOT";

	//
	repositories 
	{
		mavenLocal()
		mavenCentral()
	}
	
/* 	model
	{
		buildTypes
		{
			debug(IBuildType)
			{
				configuration.add( "debug", "true" );
			}
			
			release(IBuildType)
			{
				configuration.add( "debug", "false" );
			}
		} 		
	} */
}

// /////////////////////////////////////////////// //
// /////////////////////////////////////////////// //

/* allprojects
{
	configurations.create("default");

	configurations
	{	
		compile 
		{		
			description = 'compile classpath'
			transitive = true
		}
		
		test
		{
			extendsFrom compile
			
			description = 'test classpath'
			transitive = true
		}
	}	

	// model {
		
		// sources
		// {
			// all
			// {
				// println it.source.getSrcDirs();
			// }
		// }
	// } 
} */

// /////////////////////////////////////////////// //
// /////////////////////////////////////////////// //

/* model
{
	components
	{	
		library(LibraryComponentSpec)
		{
			platform "java","flash"
			flavor "debug", "release"
			
			sources
			{		
				main(CrossSourceSet)
				{		
					dependencies
					{
						project(":math");
					}
				
					subprojects.each {
						source.srcDir it.file('src/main')
						
						if( it.file('src/sample').exists() )
							source.srcDir it.file('src/sample')
							
						if( it.file('src/test').exists() )
							source.srcDir it.file('src/test')	
					}
					
					platform "haxe"					
				}								
			}					
		}
	}	
	
	platforms
	{
		//
		flash(IPlatform)
		{
			configuration.add( "--macro", "include('flash.at.dotpoint')" );
			configuration.add( "-cp", "subprojects/rendering/lib/hxsl" );
			configuration.add( "-lib", "format" );
			configuration.add( "-swf-version", "11" );
		}
	
		//
		java(IPlatform)
		{
			configuration.add( "-java-lib", "subprojects/rendering/lib/lwjgl/lwjgl.jar" );
		//	configuration.add( "--macro", "include('lwjgl.at.dotpoint')" );
			configuration.add( "-D", "lwjgl" );	
			configuration.add("-java", "@{variation.buildDir}" );
		}	

		all
		{		
			configuration.add( "-D", "doc" );
			configuration.add( "-D", "dotpoint" );
			//configuration.add( "--macro", "allowPackage('sys')" );			
			// configuration.add( "--macro", "include('haxe.at.dotpoint')" );
			// configuration.add( "--macro", "include('haxe.org.ds.VectorSort')" );
			configuration.add( "-resource", "subprojects/rendering/res/main/register.cfg@register.cfg" );
			configuration.add("-main", "SpatialTestRunner" );
		}		
	}
	
	flavors
	{
		debug(ILibraryFlavor)
		{
			configuration.add( "-debug", "" );
		}
	} 

}
 */
// /////////////////////////////////////////////// //
// /////////////////////////////////////////////// //
